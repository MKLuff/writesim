$color-gray-0: 							darken(#fff, 0%);
$color-gray-5: 							darken(#fff, 5%);
$color-gray-10: 						darken(#fff, 10%);
$color-gray-20: 						darken(#fff, 20%);
$color-gray-30: 						darken(#fff, 30%);
$color-gray-40: 						darken(#fff, 40%);
$color-gray-50: 						darken(#fff, 50%);
$color-gray-60: 						darken(#fff, 60%);
$color-gray-70: 						darken(#fff, 70%);
$color-gray-80: 						darken(#fff, 80%);
$color-gray-90: 						darken(#fff, 90%);
$color-gray-100: 						darken(#fff, 100%);

$font-default:							"Alcubierre", sans-serif;

$color-brand:                        	#007fae;

$color-primary:                        	#1673cd;
$color-accent:							#2fdb9f;
$color-primary-dark:                    #002d58;
$color-warning:							#ffcf37;
$color-danger:                          #cd1618;
$color-success:							#008800;

$border-radius-0:						0;
$border-radius-1:						3px;
$border-radius-2:						6px;
$border-radius-3:						12px;

$border:								1px solid $color-gray-10;

$gutter:								2rem;

$gradient-accent:						linear-gradient(to left, $color-accent, $color-primary);
$gradient-inverse:           linear-gradient(to right, $color-accent, $color-primary);
$gradient-blinker:           linear-gradient(to right, $color-accent, $color-primary);

#grad {
  background: red; /* For browsers that do not support gradients */
  background: -webkit-linear-gradient(-90deg, red, yellow); /* For Safari 5.1 to 6.0 */
  background: -o-linear-gradient(-90deg, red, yellow); /* For Opera 11.1 to 12.0 */
  background: -moz-linear-gradient(-90deg, red, yellow); /* For Firefox 3.6 to 15 */
  background: linear-gradient(-90deg, red, yellow); /* Standard syntax */
}

/// Computes a top-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}
@function top-shadow($depth) {
	$primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
	$blur: nth(1.5 3 10 14 19, $depth) * 4px;
	$color: rgba(black, nth(.12 .16 .19 .25 .30, $depth));
	@return 0 $primary-offset $blur $color;
}

/// Computes a bottom-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}
@function bottom-shadow($depth) {
	$primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
	$blur: nth(1 3 3 5 6, $depth) * 4px;
	$color: rgba(black, nth(.24 .23 .23 .22 .22, $depth));

	@return 0 $primary-offset $blur $color;
}

@mixin depth($depth) {
  	@if $depth < 1 {
    	box-shadow: none;
  	} @else if $depth > 6 {
    	@warn "Invalid $depth `#{$depth}` for mixin `card`.";
  	} @else {
    	box-shadow: bottom-shadow($depth), top-shadow($depth);
  	}
}


@mixin clearfix {

    &::after {
        clear: both;
        content: "";
        display: block;
    }
}